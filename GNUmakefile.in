### @configure_input@

AR = ar
CC = @CC@
CXX = @CXX@

CXXFLAGS = -W -Wall @CXXFLAGS@

DEPSDIR := .deps
DEPCFLAGS = -MD -MF $(DEPSDIR)/$*.d -MP
top_srcdir = @top_srcdir@
builddir = .

OBJDIR = obj

TAMER_COMMIT = 8b37569ce2884ce4dccc9b4ca2cd146693a5b685

INCLUDES = -include config.h -I$(top_srcdir)/src -I$(top_srcdir)/lib \
           -I$(top_srcdir)/app -I$(top_srcdir)/tamer -I$(OBJDIR) -I/opt/local/include
LIBS = `$(TAMER) -l` @BOOST_LIBS@ @MALLOC_LIBS@ @POSTGRES_LIBS@ @HIREDIS_LIB@ @PQXX_LIB@

CXXFLAGS += $(INCLUDES) -fno-omit-frame-pointer
LDFLAGS += -L/usr/local/lib -L/opt/local/lib

@DEFAULT_MALLOC_ASSIGNMENT@
ifeq ($(shell uname), Darwin)
  # turn off some warnings from clang regarding libev sources - very annoying
  CXXFLAGS += -Wno-mismatched-tags -Wno-ambiguous-member-template
ifndef DEFAULT_MALLOC
  CXXFLAGS += -fno-builtin
endif
else
ifndef DEFAULT_MALLOC
  CXXFLAGS += -fno-builtin-malloc -fno-builtin-calloc -fno-builtin-realloc -fno-builtin-free
endif
endif

ifdef ITRACE
  CXXFLAGS += -DIVAL_TRACE
endif

CXXCOMPILE = $(CXX) $(DEFS) $(CPPFLAGS) $(CXXFLAGS)
CXXLINK = $(CXX) $(CXXFLAGS)

TAMER = tamer/compiler/tamer
TAMERFLAGS = @TAMERFLAGS@
LIBTAMER = tamer/tamer/.libs/libtamer.a


all:    $(OBJDIR)/pqserver $(OBJDIR)/pqinfo 

$(OBJDIR)/%.o: $(top_srcdir)/lib/%.cc config.h $(OBJDIR)/stamp $(DEPSDIR)/stamp
	$(CXXCOMPILE) $(DEPCFLAGS) -c -o $@ $<

$(OBJDIR)/%.o: $(top_srcdir)/lib/%.c config.h $(OBJDIR)/stamp $(DEPSDIR)/stamp
	$(CXXCOMPILE) $(DEPCFLAGS) -c -o $@ $<

$(OBJDIR)/%.o: $(top_srcdir)/app/%.cc config.h $(OBJDIR)/stamp $(DEPSDIR)/stamp
	$(CXXCOMPILE) $(DEPCFLAGS) -c -o $@ $<
        
$(OBJDIR)/%.cc: $(top_srcdir)/app/%.tcc config.h $(OBJDIR)/stamp $(DEPSDIR)/stamp $(TAMER)
	$(TAMER) $(TAMERFLAGS) -F .deps/$*.cc.d -o $@ $<

$(OBJDIR)/%.hh: $(top_srcdir)/app/%.thh config.h $(OBJDIR)/stamp $(DEPSDIR)/stamp $(TAMER)
	$(TAMER) $(TAMERFLAGS) -F .deps/$*.hh.d -o $@ $<

$(OBJDIR)/%.o: $(top_srcdir)/src/%.cc config.h $(OBJDIR)/stamp $(DEPSDIR)/stamp
	$(CXXCOMPILE) $(DEPCFLAGS) -c -o $@ $<

$(OBJDIR)/%.o: $(OBJDIR)/%.cc config.h $(OBJDIR)/stamp $(DEPSDIR)/stamp
	$(CXXCOMPILE) $(DEPCFLAGS) -c -o $@ $<

$(OBJDIR)/%.cc: $(top_srcdir)/src/%.tcc config.h $(OBJDIR)/stamp $(DEPSDIR)/stamp $(TAMER)
	$(TAMER) $(TAMERFLAGS) -F .deps/$*.cc.d -o $@ $<

$(OBJDIR)/%.hh: $(top_srcdir)/src/%.thh config.h $(OBJDIR)/stamp $(DEPSDIR)/stamp $(TAMER)
	$(TAMER) $(TAMERFLAGS) -F .deps/$*.hh.d -o $@ $<


# make sure tamed versions get built first
$(OBJDIR)/mpfd.cc: $(top_srcdir)/src/mpfd.tcc
$(OBJDIR)/mpfd.hh: $(top_srcdir)/src/mpfd.thh
$(OBJDIR)/pqserver.cc: $(top_srcdir)/src/pqserver.tcc
$(OBJDIR)/pqserver.hh: $(top_srcdir)/src/pqserver.thh
$(OBJDIR)/pqpersistent.cc: $(top_srcdir)/src/pqpersistent.tcc
$(OBJDIR)/pqpersistent.hh: $(top_srcdir)/src/pqpersistent.thh
$(OBJDIR)/pqclient.cc: $(top_srcdir)/src/pqclient.tcc
$(OBJDIR)/pqclient.hh: $(top_srcdir)/src/pqclient.thh
$(OBJDIR)/pqremoteclient.cc: $(top_srcdir)/src/pqremoteclient.tcc
$(OBJDIR)/pqremoteclient.hh: $(top_srcdir)/src/pqremoteclient.thh
$(OBJDIR)/pqmulticlient.cc: $(top_srcdir)/src/pqmulticlient.tcc
$(OBJDIR)/pqmulticlient.hh: $(top_srcdir)/src/pqmulticlient.thh
$(OBJDIR)/pqinterconnect.cc: $(top_srcdir)/src/pqinterconnect.tcc
$(OBJDIR)/pqinterconnect.hh: $(top_srcdir)/src/pqinterconnect.thh
$(OBJDIR)/pqdbpool.cc: $(top_srcdir)/src/pqdbpool.tcc
$(OBJDIR)/pqdbpool.hh: $(top_srcdir)/src/pqdbpool.thh
$(OBJDIR)/pqunit2.cc: $(top_srcdir)/src/pqunit2.tcc
$(OBJDIR)/hackernews.cc: $(top_srcdir)/app/hackernews.tcc
$(OBJDIR)/hackernews.hh: $(top_srcdir)/app/hackernews.thh
$(OBJDIR)/hackernewsshim.hh: $(top_srcdir)/app/hackernewsshim.thh
$(OBJDIR)/rwmicro.cc: $(top_srcdir)/app/rwmicro.tcc
$(OBJDIR)/rwmicro.hh: $(top_srcdir)/app/rwmicro.thh
$(OBJDIR)/twitter.cc: $(top_srcdir)/app/twitter.tcc
$(OBJDIR)/twitter.hh: $(top_srcdir)/app/twitter.thh
$(OBJDIR)/twittershim.hh: $(top_srcdir)/app/twittershim.thh
$(OBJDIR)/twitternew.cc: $(top_srcdir)/app/twitternew.tcc
$(OBJDIR)/twitternew.hh: $(top_srcdir)/app/twitternew.thh
$(OBJDIR)/twitternewshim.hh: $(top_srcdir)/app/twitternewshim.thh
$(OBJDIR)/analytics.cc: $(top_srcdir)/app/analytics.tcc
$(OBJDIR)/analytics.hh: $(top_srcdir)/app/analytics.thh
$(OBJDIR)/redisadapter.hh: $(top_srcdir)/app/redisadapter.thh
$(OBJDIR)/redisadapter.cc: $(top_srcdir)/app/redisadapter.tcc
$(OBJDIR)/memcacheadapter.hh: $(top_srcdir)/app/memcacheadapter.thh
$(OBJDIR)/memcacheadapter.cc: $(top_srcdir)/app/memcacheadapter.tcc
$(OBJDIR)/hashtableadapter.hh: $(top_srcdir)/app/hashtableadapter.thh
$(OBJDIR)/pqinfo.cc: $(top_srcdir)/app/pqinfo.tcc

$(OBJDIR)/pqmain.o: $(OBJDIR)/pqserver.hh \
                    $(OBJDIR)/pqclient.hh \
                    $(OBJDIR)/pqpersistent.hh \
                    $(OBJDIR)/pqdbpool.hh \
                    $(OBJDIR)/twitter.hh \
                    $(OBJDIR)/hackernews.hh \
                    $(OBJDIR)/twitternew.hh \
                    $(OBJDIR)/analytics.hh \
                    $(OBJDIR)/rwmicro.hh \
                    $(OBJDIR)/hashtableadapter.hh \
                    $(OBJDIR)/memcacheadapter.hh \
                    $(OBJDIR)/redisadapter.hh
$(OBJDIR)/pqserver.o: $(OBJDIR)/pqserver.hh $(OBJDIR)/pqinterconnect.hh 
$(OBJDIR)/pqserver.hh: $(OBJDIR)/pqpersistent.hh
$(OBJDIR)/pqserverloop.o: $(OBJDIR)/pqinterconnect.hh
$(OBJDIR)/pqsource.o: $(OBJDIR)/pqinterconnect.hh
$(OBJDIR)/pqsink.o: $(OBJDIR)/pqserver.hh
$(OBJDIR)/mpfd.o: $(OBJDIR)/mpfd.cc $(OBJDIR)/mpfd.hh
$(OBJDIR)/pqserverloop.o: $(OBJDIR)/mpfd.hh
$(OBJDIR)/pqjoin.o: $(OBJDIR)/pqserver.hh
$(OBJDIR)/pqclient.o: $(OBJDIR)/pqclient.hh
$(OBJDIR)/pqinterconnect.o: $(OBJDIR)/pqinterconnect.hh
$(OBJDIR)/pqinterconnect.hh: $(OBJDIR)/pqremoteclient.hh
$(OBJDIR)/pqmulticlient.o: $(OBJDIR)/pqmulticlient.hh 
$(OBJDIR)/pqmulticlient.hh: $(OBJDIR)/pqremoteclient.hh $(OBJDIR)/pqdbpool.hh
$(OBJDIR)/pqremoteclient.hh: $(OBJDIR)/mpfd.hh
$(OBJDIR)/pqremoteclient.o: $(OBJDIR)/pqremoteclient.hh
$(OBJDIR)/pqunit.o: $(OBJDIR)/pqserver.hh $(OBJDIR)/pqpersistent.hh $(OBJDIR)/redisadapter.hh
$(OBJDIR)/twitter.hh: $(OBJDIR)/twittershim.hh
$(OBJDIR)/twitter.o: $(OBJDIR)/twitter.hh $(OBJDIR)/pqmulticlient.hh
$(OBJDIR)/twittershim.hh: $(OBJDIR)/pqclient.hh
$(OBJDIR)/twitternew.o: $(OBJDIR)/twitternew.hh $(OBJDIR)/pqmulticlient.hh $(OBJDIR)/pqdbpool.hh
$(OBJDIR)/twitternew.hh: $(OBJDIR)/twitternewshim.hh
$(OBJDIR)/analytics.o: $(OBJDIR)/analytics.hh $(OBJDIR)/pqremoteclient.hh
$(OBJDIR)/hackernews.o: $(OBJDIR)/hackernews.hh $(OBJDIR)/pqmulticlient.hh $(OBJDIR)/redisadapter.hh
$(OBJDIR)/hackernews.hh: $(OBJDIR)/hackernewsshim.hh
$(OBJDIR)/facebook.o: $(OBJDIR)/pqserver.hh
$(OBJDIR)/rwmicro.o: $(OBJDIR)/rwmicro.hh $(OBJDIR)/twittershim.hh $(OBJDIR)/pqremoteclient.hh $(OBJDIR)/redisadapter.hh
$(OBJDIR)/hashtimer.o: $(OBJDIR)/pqserver.hh
$(OBJDIR)/pqinfo.o: $(OBJDIR)/pqinfo.cc $(OBJDIR)/pqremoteclient.hh

COMMON_OBJS = \
	$(OBJDIR)/str.o \
	$(OBJDIR)/straccum.o \
	$(OBJDIR)/string.o \
	$(OBJDIR)/error.o \
	$(OBJDIR)/json.o \
	$(OBJDIR)/msgpack.o \
	$(OBJDIR)/compiler.o \
	$(OBJDIR)/encoding.o \
	$(OBJDIR)/hashallocator.o \
	$(OBJDIR)/sp_key.o \
	$(OBJDIR)/partitioner.o \
	$(OBJDIR)/hosts.o \
	$(OBJDIR)/clp.o

PQSERVER_OBJS = $(COMMON_OBJS) \
	$(OBJDIR)/pqbase.o \
	$(OBJDIR)/pqjoin.o \
	$(OBJDIR)/pqsource.o \
	$(OBJDIR)/pqsink.o \
	$(OBJDIR)/pqserver.o \
	$(OBJDIR)/pqserverloop.o \
	$(OBJDIR)/mpfd.o \
	$(OBJDIR)/pqpersistent.o \
	$(OBJDIR)/pqpartition.o \
        $(OBJDIR)/pqmemory.o \
        $(OBJDIR)/pqclient.o \
        $(OBJDIR)/pqmulticlient.o \
        $(OBJDIR)/pqremoteclient.o \
        $(OBJDIR)/pqinterconnect.o \
        $(OBJDIR)/pqdbpool.o \
        $(OBJDIR)/pqunit.o \
        $(OBJDIR)/pqunit2.o \
        $(OBJDIR)/twitter.o \
        $(OBJDIR)/twitternew.o \
        $(OBJDIR)/hackernews.o \
        $(OBJDIR)/analytics.o \
        $(OBJDIR)/facebook.o \
        $(OBJDIR)/rwmicro.o \
        $(OBJDIR)/redisadapter.o \
        $(OBJDIR)/memcacheadapter.o

PQMAIN_OBJS = $(PQSERVER_OBJS) \
	$(OBJDIR)/pqmain.o

PQINFO_OBJS = $(COMMON_OBJS) \
	$(OBJDIR)/pqremoteclient.o \
	$(OBJDIR)/mpfd.o \
	$(OBJDIR)/pqinfo.o

HASHTIMER_OBJS = $(PQSERVER_OBJS) \
	$(OBJDIR)/hashtimer.o

$(OBJDIR)/pqserver: $(PQMAIN_OBJS) $(LIBTAMER)
	$(CXXLINK) -o $@ $^ $(LDFLAGS) $(LIBS)

$(OBJDIR)/pqinfo: $(PQINFO_OBJS) $(LIBTAMER)
	$(CXXLINK) -o $@ $^ $(LDFLAGS) $(LIBS)

$(OBJDIR)/rbtest: $(OBJDIR)/rbtest.o $(OBJDIR)/str.o $(OBJDIR)/straccum.o $(OBJDIR)/string.o
	$(CXXLINK) -o $@ $^ $(LDFLAGS) $(LIBS)

$(OBJDIR)/jsontest: $(COMMON_OBJS) $(OBJDIR)/jsontest.o
	$(CXXLINK) -o $@ $^ $(LDFLAGS) $(LIBS)

$(OBJDIR)/msgpacktest: $(COMMON_OBJS) $(OBJDIR)/msgpacktest.o
	$(CXXLINK) -o $@ $^ $(LDFLAGS) $(LIBS)

$(OBJDIR)/hashtimer: $(HASHTIMER_OBJS) $(LIBTAMER)
	$(CXXLINK) -o $@ $^ $(LDFLAGS) $(LIBS)

tamer/compiler/tamer $(LIBTAMER): tamer-update

tamer-update:
	@cd ./`git rev-parse --show-cdup` && cur=`git submodule status tamer | head -c 41 | tail -c +2` && if test "$$cur" != $(TAMER_COMMIT) && test -z `cd tamer; git rev-list -n1 $(TAMER_COMMIT)..HEAD 2>/dev/null`; then (echo Updating tamer... 1>&2; cd tamer; git checkout -f master >/dev/null; git pull; cd ..; git submodule update tamer); fi
	cd tamer && $(MAKE) --no-print-directory compiler tamer

$(OBJDIR)/stamp $(DEPSDIR)/stamp:
	mkdir -p $(dir $@)
	touch $@

config.h: stamp-h

GNUmakefile: GNUmakefile.in config.status
	CONFIG_FILES=$@ CONFIG_HEADERS= $(SHELL) ./config.status

$(top_srcdir)/configure $(top_srcdir)/config.h.in: $(top_srcdir)/configure.ac
	cd $(top_srcdir) && autoreconf -i && touch config.h.in

config.status: $(top_srcdir)/configure
	$(top_srcdir)/configure @ac_configure_args@

stamp-h: $(top_srcdir)/config.h.in config.status
	CONFIG_FILES= $(SHELL) ./config.status
	echo > stamp-h

clean:
	rm -rf $(OBJDIR) $(DEPSDIR) $(GENDIR)

allclean: clean
	cd tamer && $(MAKE) clean

distclean: clean
	cd tamer && $(MAKE) distclean
	rm -rf config.* configure autom4te.* stamp-h Makefile

DEPFILES := $(wildcard $(DEPSDIR)/*.d)
ifneq ($(DEPFILES),)
include $(DEPFILES)
endif

always:
	@:

.PHONY: all clean distclean always tamer-update
.PRECIOUS: $(PROTOGENDIR)/%.pb.cc $(PROTOGENDIR)/%.pb.h \
	$(PROTOGENDIR)/%.px.cc $(PROTOGENDIR)/%.px.hh \
	$(OBJ)/%.cc $(OBJ)/%.hh
